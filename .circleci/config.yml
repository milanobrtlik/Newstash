
defaults: &job-defaults
  docker:
    - image: circleci/php:7.3-fpm-node-browsers-legacy

run-load-image-artifacts: &load-image-artifacts
    name: Load Images
    command: |
        docker load <workspace/newstash-php-image.tar &&
        docker load <workspace/newstash-nginx-image.tar

# -----------------------------------------------------------------------------

jobs:
    build:
        <<: *job-defaults

        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout
            - run: |
                mkdir workspace

            # DEPENDENCIES
            - run: |
                sudo apt-get install yarn
            - run: |
                cd Symfony && \
                yarn install &&
                yarn encore production
            - run: |
                cd Symfony && \
                composer \
                    --classmap-authoritative \
                    --ignore-platform-reqs \
                    --no-scripts \
                    install
            # BUILD
            - run: |
                docker build -t newstash-php-image -f docker/php/Dockerfile .
            - run: |
                docker build -t newstash-nginx-image -f docker/nginx/Dockerfile .
            - run:
                command: |
                  docker save newstash-php-image >workspace/newstash-php-image.tar &&
                  docker save newstash-nginx-image >workspace/newstash-nginx-image.tar

            - run: ls -l workspace

            - persist_to_workspace:
                root: workspace
                paths:
                    - newstash-php-image.tar
                    - newstash-nginx-image.tar

    test:
        <<: *job-defaults

        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout

            - attach_workspace:
                at: workspace

            - run:
                <<: *load-image-artifacts

            - run:
                name: Run Mysql
                command: |
                    docker run \
                        --name mysql \
                        --env "MYSQL_ROOT_PASSWORD=bookstash" \
                        --env "MYSQL_DATABASE=bookstash" \
                        --env "MYSQL_USER=bookstash" \
                        --env "MYSQL_PASSWORD=bookstash" \
                        --env-file=docker/cicd-testing.env \
                        -p 3306:3306 \
                        -d mysql:8

            - run:
                name: Run Mongo
                command: |
                    docker run \
                        --name mongo \
                        -p 27017:27017 \
                        -d mongo:4

            # boot the php container and have it just hang out
            - run:
                name: Start PHP-FPM
                command: |
                    docker run \
                        --net=host \
                        --add-host="mysql:127.0.0.1" \
                        --add-host="mongo:127.0.0.1" \
                        --name newstash-php-container \
                        --detach \
                        --entrypoint sh \
                        newstash-php-image \
                            -c 'sleep 10000000'

            - run: TERM=xterm ./developer/bin/devify-php-container.sh

            - run:
                name: Run Unit Tests
                command: |
                    docker exec \
                        --interactive \
                        --tty \
                        newstash-php-container \
                            sh -c 'cd Symfony && \
                                composer install && \
                                ./bin/phpunit --verbose --debug --coverage-text'






    deploy:
        <<: *job-defaults

        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout

            - attach_workspace:
                at: workspace

            - run: echo "deploy by tag stub"


# -----------------------------------------------------------------------------

workflows:
    version: 2

    commit_test:
        jobs:
            - build:
                filters:
                    branches:
                        only: /.*/
            - test:
                requires:
                    - build

    deploy_by_tag:
        jobs:
            - build:
                filters:
                    tags:
                        only: /^[0-9]+\.[0-9]+\.[0-9]+$/
                    branches:
                        ignore: /.*/
            - test:
                requires:
                    - build
            - deploy:
                requires:
                    - test

